import os # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å .env
from dotenv import find_dotenv, load_dotenv # –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–≤—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(find_dotenv()) # –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ .env

import telebot
import webbrowser # –î–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ —Å–∞–π—Ç
from telebot import types # –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
import re # –†–∞–±–æ—Ç–∞ —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏

from currency_converter import CurrencyConverter # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç
import users_database, currencies

bot = telebot.TeleBot(token=os.getenv("TOKEN")) # –£–∫–∞–∑–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –Ω–∞ –±–æ—Ç–∞

currency = CurrencyConverter()

# –¢–µ–≥–∏ HTML: <b><\b> - –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç, <em><\em> - –∫—É—Ä—Å–∏–≤–Ω—ã–π —à—Ä–∏—Ñ—Ç, <u><\u> - —à—Ä–∏—Ñ—Ç —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º,
# bot.reply_to(message, text) - –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
# bot.send_message(message, text) - –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç

@bot.message_handler(commands=['start']) # –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π. –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–º–∞–Ω–¥–∞ /start
def start_command(message):
    bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ–≥–æ –∑–¥—Ä–∞–≤–∏—è, {message.from_user.first_name}! –° –ø–æ–º–æ—â—å—é –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ Bioba.") # message.chat.id - –ø–æ–ª—É—á–µ–Ω–∏–µ id —á–∞—Ç–∞
    users_database.register(message)

@bot.message_handler(commands=['menu'])
def menu_command(message):
    markup = types.InlineKeyboardMarkup(row_width=2)  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å –∫–Ω–æ–ø–∫–∏
    button1 = types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç",callback_data="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç")
    button2 = types.InlineKeyboardButton("–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç", callback_data="–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç")
    button3 = types.InlineKeyboardButton("–†–∞—Å—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞", callback_data="–†–∞—Å—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞")
    markup.add(button1,button2,button3)
    file = open('../smile.jpg', 'rb') # 'rb' - –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞ —á—Ç–µ–Ω–∏–µ
    bot.send_photo(message.chat.id, file) # –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ —á–∞—Ç
    bot.send_message(message.chat.id, "–í—ã –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –º–µ–Ω—é BiobaBot üò§", reply_markup=markup)

@bot.callback_query_handler(lambda call: call.data in ["–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç","–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç","–†–∞—Å—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞"])
def on_click(call):
    if call.data == '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç':
        site_command(call.message)
    elif call.data == '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
        currency_message(call.message)
    elif call.data == '–†–∞—Å—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞':
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ CNY")
        bot.register_next_step_handler(call.message, product_cost_message)
    else:
        bot.send_message(call.message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!")

@bot.message_handler(commands=['site'])
def site_command(message): # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç Bioba
    bot.send_message(message.chat.id, '–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å–∞–π—Ç Bioba')
    webbrowser.open('http://bioba.ru/')


@bot.message_handler(commands=['currency'])
def currency_message(message): # –í–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω—É–∂–Ω–æ–π –ø–∞—Ä–µ –≤–∞–ª—é—Ç
    markup = types.InlineKeyboardMarkup(row_width=3)
    button1 = types.InlineKeyboardButton("CNY/RUB", callback_data="CNY/RUB")
    button2 = types.InlineKeyboardButton("USD/RUB", callback_data='USD/RUB')
    button3 = types.InlineKeyboardButton("USD/CNY", callback_data='USD/CNY')
    button4 = types.InlineKeyboardButton("–î—Ä—É–≥–∞—è –ø–∞—Ä–∞ –≤–∞–ª—é—Ç", callback_data='other')
    markup.add(button1,button2,button3,button4)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å", reply_markup=markup)

@bot.callback_query_handler(lambda call: call.data in ['other',"CNY/RUB",'USD/RUB','USD/CNY'])
def ratio_currency(call): # –ú–µ—Ç–æ–¥ —Ä–∞—Å—Å—á–µ—Ç–∞ –ø–∞—Ä—ã –≤–∞–ª—é—Ç CNY/RUB, USD/RUB, USD/CNY
    if call.data != "other":
        values = call.data.split('/')
        if values[1] == "RUB":
            bot.send_message(call.message.chat.id, f"–°–µ–π—á–∞—Å –∫—É—Ä—Å {values[0]}/RUB —Ä–∞–≤–µ–Ω: {currencies.TO_RUB(values[0])}")
        else:
            res = round(currency.convert(1, values[0], values[1]), 2)
            bot.send_message(call.message.chat.id, f"–°–µ–π—á–∞—Å –∫—É—Ä—Å {values[0]}/{values[1]} —Ä–∞–≤–µ–Ω: {res}")
    else:
        bot.send_message(call.message.chat.id, "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –í–ê–õ–Æ–¢–ê_1/–í–ê–õ–Æ–¢–ê_2")
        bot.register_next_step_handler(call.message, other_currency)

def other_currency(message): # –ú–µ—Ç–æ–¥ —Ä–∞—Å—Å—á–µ—Ç–∞ –ø–∞—Ä—ã –≤–∞–ª—é—Ç, –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    if re.match(r"^[A-Za-z]{3}/[A-Za-z]{3}$", message.text.strip()):
        values = message.text.upper().split('/')
        if values[1] == "RUB":
            bot.send_message(message.chat.id, f"–°–µ–π—á–∞—Å –∫—É—Ä—Å {values[0]}/RUB —Ä–∞–≤–µ–Ω: {currencies.TO_RUB(values[0])}")
        else:
            res = round(currency.convert(1, values[0], values[1]), 2)
            bot.send_message(message.chat.id, f"–°–µ–π—á–∞—Å –∫—É—Ä—Å {values[0]}/{values[1]} —Ä–∞–≤–µ–Ω: {res}")
    else:
        bot.send_message(message.chat.id, f"–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.")
        bot.register_next_step_handler(message, other_currency)


def product_cost_message(message): # –ú–µ—Ç–æ–¥ —Ä–∞—Å—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Ç–∏ —Ç–æ–≤–∞—Ä–∞
    amount = message.text
    try:
        amount = float(message.text.strip())
    except Exception:
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ CNY.")
        bot.register_next_step_handler(message, product_cost_message)
        return

    if amount > 0:
        bot.send_message(message.chat.id, f"–†–∞—Å—Å—á—ë—Ç–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {round(float(currencies.TO_RUB('CNY')) * amount, 2)} —Ä—É–±–ª–µ–π")
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ü—Ä–∏—à–ª–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ CNY.")
        bot.register_next_step_handler(message, product_cost_message)


# @bot.message_handler(commands=['pay'])
# def pay_command(message):
#     bot.send_invoice(message.chat.id, "–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞", "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –ø–ª–æ—â–∞–¥–∫–∏ Poizon", 'invoice', payment_token, "RUB", [types.LabeledPrice('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –ø–ª–æ—â–∞–¥–∫–∏ Poizon', 1000 * 100)])
#
# @bot.message_handler(content_types=types.InputInvoiceMessageContent())
#




@bot.message_handler(commands=['help']) # –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–º–∞–Ω–¥–∞ /help
def help_command(message):
    bot.send_message(message.chat.id, f"""<b>–ò–ù–§–û–†–ú–ê–¶–ò–Ø –î–õ–Ø –†–ê–ë–û–¢–´ –° –ë–û–¢–û–ú</b>\n
–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥:
/start - –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
/menu - –ö–æ–º–º–∞–Ω–¥–∞ –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é –±–æ—Ç–∞
/currency - –£–∑–Ω–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç
/site - –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–∞–π—Ç–∞ Bioba
/chat_info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ
/help - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º""", parse_mode='html') # message.chat.id - –ø–æ–ª—É—á–µ–Ω–∏–µ id —á–∞—Ç–∞

@bot.message_handler(commands=['chat_info']) # –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–º–∞–Ω–¥–∞ /chat_info
def chatInfo_command(message):
    bot.send_message(message.chat.id, message) # message.chat.id - –ø–æ–ª—É—á–µ–Ω–∏–µ id —á–∞—Ç–∞



@bot.message_handler() # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
def random_message(message):
    if message.text.lower() == '–∏–Ω—Ñ–∞':
        send = f'–ù–∏–∫–Ω–µ–π–º: {message.from_user.first_name}\n–Æ–∑–µ—Ä–Ω–µ–π–º: {message.from_user.username}\n–ü—Ä–µ–º–∏—É–º: ' + "–µ—Å—Ç—å" if message.from_user.is_premium else "–ù–µ—Ç"
        bot.send_message(message.chat.id, send)
    elif message.text == '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç':
        site_command(message)
    elif message.text == '–ö—É—Ä—Å –≤–∞–ª—é—Ç':
        return currency_message(message)
    elif message.text == '–†–∞—Å—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞':
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ CNY")
        bot.register_next_step_handler(message, product_cost_message)

print("Compilation complete.")
bot.polling(none_stop=True) # –°—Ç—Ä–æ–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞, –∞ –æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É –æ—Ç–∫—Ä—ã—Ç–æ–π
#bot.infinity_polling() # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞